$(document).ready(function () {

	var csrftoken = Cookies.get('csrftoken');
	function csrfSafeMethod(method) {
		// these HTTP methods do not require CSRF protection
		return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
	}
	$.ajaxSetup({
		beforeSend: function(xhr, settings) {
    		if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
        		xhr.setRequestHeader("X-CSRFToken", csrftoken);
    		}
		}
	});

	getGroupList();
	getOrgList();
	getUserList();

	$(window).bind("beforeunload", function(e) {
		deleted_reservations = document.getElementsByClassName("deleted-reservation");
		deleted_reservation_ids = [];
		for (var i=0; i<deleted_reservations.length; i++) {
			stripped_id = deleted_reservations[i].id.substring("reservation".length);
			deleted_reservation_ids.push(stripped_id);
		}
		unjoined_groups = document.getElementsByClassName("deleted-group");
		unjoined_groups_ids = [];
		for (i=0; i<unjoined_groups.length; i++) {
			stripped_id = unjoined_groups[i].id.substring("group".length);
			unjoined_groups_ids.push(stripped_id);
		}
		unjoined_orgs = document.getElementsByClassName("deleted-org");
		unjoined_orgs_ids = [];
		for (i=0; i<unjoined_orgs.length; i++) {
			stripped_id = unjoined_orgs[i].id.substring("org".length);
			unjoined_orgs_ids.push(stripped_id);
		}

		$.ajax({
			url : "/booker/delete_profile_info/",
			type: "POST",
			data : {reservation_ids:JSON.stringify(deleted_reservation_ids),
					group_ids:JSON.stringify(unjoined_groups_ids),
					org_ids:JSON.stringify(unjoined_orgs_ids),
				}
		});
	});
});

function getGroupList() {
	jQuery.get("/booker/groups/",function(group_objs) {
		group_list = JSON.parse(group_objs);
		group_names = [];
		for (var i=0; i<group_list.length; i++) {
			group_names.push(group_list[i]["fields"]["name"]);
		}
	});
}

function getOrgList() {
	jQuery.get("/booker/organizations/",function(org_objs) {
		org_list = JSON.parse(org_objs);
		org_names = [];
		for (var i=0; i<org_list.length; i++) {
			org_names.push(org_list[i]["fields"]["name"]);
		}
	});
}

function getUserList() {
	jQuery.get("/booker/user_profiles/",function(user_objs) {
		user_list = JSON.parse(user_objs);
		user_names_emails = [];
		for (var i=0; i<user_list.length; i++) {
			user_names_emails.push(user_list[i]["fields"]["first_name"]+ ' ' +user_list[i]["fields"]["last_name"]);
		}
	});
}

var group_list;
var group_names;
var org_list;
var org_names;
var user_list;
var user_names_emails;
var delete_called = false;

function updateActiveOrg(nname) {
	if(delete_called) {
		delete_called = false;
		return;
	}
	var old_org = document.getElementsByClassName("list-group-item active");
	var org = document.getElementById(nname);
	var old_button = document.getElementsByClassName("remove-org-button active");
	var button = document.getElementById("remove-org-button "+nname);

	if (org === old_org[0]) {
		org.className = "list-group-item";
		button.className = "remove-org-button";
	} else {
		if (old_org.length !== 0) {
			old_org[0].className = "list-group-item";
			old_org[0].className = "remove-org-button"
		}
		org.className = "list-group-item active";
		button.className = "remove-org-button active";
	}
}

function updateActiveGroup(nname) {
	if(delete_called) {
		delete_called = false;
		return;
	}
	var old_group = document.getElementsByClassName("list-group-item active");
	var group = document.getElementById(nname);

	var old_remove_button = document.getElementsByClassName("remove-group-button active");
	var remove_button = document.getElementById("remove-group-button "+nname);

	var old_group_content = document.getElementsByClassName("group-content active");
	var group_content = document.getElementById("group-content "+nname);

	// If the group that was clicked was the active group, unactivate it
	if (group === old_group[0]) {
		group.className = "list-group-item";
		remove_button.className = "remove-group-button";
		group_content.className = "group-content";
	} else {
		// If there is an active group, unactivate it
		if (old_group.length !== 0) {
			old_group[0].className = "list-group-item";
			old_remove_button[0].className = "remove-group-button";
			old_group_content[0].className = "group-content";

		}
		// Set the group that was clicked to active
		group.className = "list-group-item active";
		remove_button.className = "remove-group-button active";
		group_content.className = "group-content active"
	}
}

function userIsGroupAdmin(user_id,group_name) {
	for (var i=0; i<group_list.length; i++) {
		curr_group = group_list[i];
		if (group_name === curr_group["fields"]["name"]) {
			if ($.inArray(parseInt(user_id), curr_group["fields"]["admins"]) !== -1) {
				return true;
			}
		}
	}
	return false;
}

function updateActiveReservation(user_id,group_name,nname) {
	if (group_name !== "" && !userIsGroupAdmin(user_id,group_name)) {
		return;
	}
	if (delete_called) {
		delete_called = false;
		return;
	}
	var old_reservation = document.getElementsByClassName("list-group-item active");
	var reservation = document.getElementById(nname);
	var old_button = document.getElementsByClassName("remove-reservation-button active");
	var button = document.getElementById("remove-reservation-button "+nname);

	if (reservation === old_reservation[0]) {
		reservation.className = "list-group-item";
		button.className = "remove-reservation-button";
	} else {
		if (old_reservation.length !== 0) {
			old_reservation[0].className = "list-group-item";
			old_button[0].className = "remove-reservation-button"
		}
		reservation.className = "list-group-item active";
		button.className = "remove-reservation-button active";
	}
}

function removeReservation(nname) {
	swal({   
		title: "Are you sure?",   
		text: "You will permanently lose this reservation!",   
		type: "warning",   
		showCancelButton: true,   
		confirmButtonColor: "#DD6B55",   
		confirmButtonText: "Yes, cancel it!",   
		closeOnConfirm: false 
	},
	function() {
		delete_called = true;
		nname = "#" + nname;
		$(nname).removeClass('active');
		$(nname).addClass('deleted-reservation');
		$(nname).css("display","none");
		swal({
			title: "Reservation canceled!",
			type: "success",
		},
		function() {
			location.replace("/booker/profile/?tab=reservation");
		}); 
	});
}

function toGroupRes(gname) {
	console.log("hey");
	var input = document.getElementById("group-input");
	console.log("again");
	input.value = gname;
	console.log(input.value);
    document.forms['groupform'].submit();
}

function removeGroup(nname) {
	swal({   
		title: "Are you sure?",
		text: "You will have to rejoin to see this group's reservations.",
		type: "warning",   
		showCancelButton: true,   
		confirmButtonColor: "#DD6B55",   
		confirmButtonText: "Yes, leave group!",   
		closeOnConfirm: false 
	},
	function() {
		delete_called = true;
		nname = "#" + nname;
		$(nname).removeClass('active');
		$(nname).addClass('deleted-group');
		$(nname).css("display","none");
		swal({
			title: "You have left the group!",
			type: "success",
		},
		function() {
			location.replace("/booker/profile/?tab=group");
		}); 
	});
}

function removeOrg(nname) {
	swal({   
		title: "Are you sure?",
		text: "You will no longer be able to schedule reservations in rooms owned by this organization.",
		type: "warning",   
		showCancelButton: true,   
		confirmButtonColor: "#DD6B55",   
		confirmButtonText: "Yes, leave organization!",   
		closeOnConfirm: false 
	},
	function() {
		delete_called = true;
		nname = "#" + nname;
		$(nname).removeClass('active');
		$(nname).addClass('deleted-org');
		$(nname).css("display","none");
		swal({
			title: "You have left the organization!",
			type: "success",
		},
		function() {
			location.replace("/booker/profile/?tab=organization");
		}); 
	});
}

function makeContentInactive() {
	console.log("makeContentInactive being called");
	var active_items = document.getElementsByClassName("list-group-item active");
	// console.log(active_items);
	for (var i = 0; i < active_items.length; i++) {
		active_items[i].className = "list-group-item";
	}
	// console.log(active_items);
	var active_buttons = document.getElementsByClassName("remove-reservation-button active");
	for (i = 0; i < active_buttons.length; i++) {
		active_buttons[i].className = "remove-reservation-button";
	}
	active_buttons = document.getElementsByClassName("remove-group-button active");
	for (i = 0; i < active_buttons.length; i++) {
		active_buttons[i].className = "remove-group-button";
	}
	active_buttons = document.getElementsByClassName("group-res-button active");
	for (i = 0; i < active_buttons.length; i++) {
		active_buttons[i].className = "group-res-button";
	}
	active_buttons = document.getElementsByClassName("remove-org-button active");
	for (i = 0; i < active_buttons.length; i++) {
		active_buttons[i].className = "remove-org-button";
	}
}

function joinGroupPopup() {
	swal.withForm({   
		title: "Request to Join a Group!", 
		text: 'Search existing groups:',
		confirmButtonColor: '#FED100',
		showCancelButton: true,   
		closeOnConfirm: false,   
		showLoaderOnConfirm: true, 
		html: true,
		formFields: [
			{ id: 'name', placeholder: 'Start typing group name' },
		]
	}, 
	function(isConfirm) {
		if (isConfirm) {
			group_name = this.swalForm.name;
			if ($.inArray(group_name, group_names) !== -1) {
				$.ajax({
					url : "/booker/join_group_request/",
					type: "POST",
					data : {group_name:group_name},
				});
				setTimeout(function(){ 
					swal({
						title: "Request sent to " + group_name + "!",
						text: "You will be added to this group once the group admin accepts your request.",
						type: "success",
						confirmButtonColor: '#FED100',
					},
					function() {
						location.replace("/booker/profile/?tab=group");
					});   
	    		}, 2000);
			} else {
				setTimeout(function(){ 
					swal("Uh oh! There is no group called " + group_name + "!");   
	    		}, 2000);
			}
	    }
	});
	jQuery(function($) {
		var data = group_names;
		$("#name").autocomplete({
			source: data
		});
	});
}

function joinOrgPopup() {
	swal.withForm({   
		title: "Join an Organization!", 
		text: 'Search existing organizations:',
		showCancelButton: true,
		confirmButtonColor: '#FED100',   
		closeOnConfirm: false,   
		showLoaderOnConfirm: true, 
		html: true,
		formFields: [
			{ id: 'name', placeholder: 'Start typing organization name' },
		]
	}, 
	function(isConfirm) {
		if (isConfirm) {
			org_name = this.swalForm.name;
			if ($.inArray(org_name, org_names) !== -1) {
				$.ajax({
					url : "/booker/join_org/",
					type: "POST",
					data : {org_name:org_name},
				});
				setTimeout(function(){ 
					swal({
						title: "Successfully joined " + org_name + "!",
						type: "success",
					},
					function() {
						location.replace("/booker/profile/?tab=organization");
					});   
	    		}, 2000);
			} else {
				setTimeout(function(){ 
					swal("Uh oh! There is no organization called " + org_name + "!");   
	    		}, 2000);
			}
	    }
	});
	jQuery(function($) {
		var data = org_names;
		$("#name").autocomplete({
			source: data
		});
	});
}

function createGroupPopup() {
	swal.withForm({
	    title: 'Create a Group!',
	    text: 'Make reservations for your friends, teammates, etc.',
	    showCancelButton: true,
	    confirmButtonColor: '#FED100',
	    confirmButtonText: 'Create Group',
	    closeOnConfirm: false,   
		showLoaderOnConfirm: true,
	    formFields: [
			{ id: 'name', placeholder: 'Name your group' },
			// { id: 'description', placeholder: 'Add a description for your group' },
		]
		}, 
		function (isConfirm) {
			if (isConfirm) {
				group_name = this.swalForm.name;
				if ($.inArray(group_name, group_names) === -1) {
					$.ajax({
						url : "/booker/create_group/",
						type: "POST",
						data : {group_name:group_name},
					});
					setTimeout(function(){ 
						swal({
							title: "Successfully created " + group_name + "!",
							type: "success",
						},
						function() {
							location.replace("/booker/profile/?tab=group");
						});   
	    			}, 2000);
				} else {
					setTimeout(function(){ 
						swal("Whoops! A group called " + group_name + " already exists! Please use another name.");   
		    		}, 2000);
				}
		    }
		}
	)
}

<<<<<<< HEAD
function toChangePicture() {
	location.replace("/booker/settings/?tab=picture");
=======
// function requestsPopup(group_name) {
// 	swal.withForm({   
// 		title: "Request to Join a Group!", 
// 		text: 'Search existing groups:',
// 		confirmButtonColor: '#FED100',
// 		showCancelButton: true,   
// 		closeOnConfirm: false,   
// 		showLoaderOnConfirm: true, 
// 		html: true,
// 		formFields: [
// 			{ id: 'name', placeholder: 'Start typing group name' },
// 		]
// 	}, 
// 	function(isConfirm) {
// 		if (isConfirm) {
// 			group_name = this.swalForm.name;
// 			if ($.inArray(group_name, group_names) !== -1) {
// 				$.ajax({
// 					url : "/booker/join_group_request/",
// 					type: "POST",
// 					data : {group_name:group_name},
// 				});
// 				setTimeout(function(){ 
// 					swal({
// 						title: "Request sent to " + group_name + "!",
// 						text: "You will be added to this group once the group admin accepts your request.",
// 						type: "success",
// 						confirmButtonColor: '#FED100',
// 					},
// 					function() {
// 						location.replace("/booker/profile/?tab=group");
// 					});   
// 	    		}, 2000);
// 			} else {
// 				setTimeout(function(){ 
// 					swal("Uh oh! There is no group called " + group_name + "!");   
// 	    		}, 2000);
// 			}
// 	    }
// 	});
// 	jQuery(function($) {
// 		var data = [];
// 		console.log("HERE!")
// 		console.log(group_name);
// 		console.log($.inArray(group_name,group_names));
// 		var curr_group = group_list[$.inArray(group_name,group_names)];
// 		console.log(curr_group);
// 		for (var i=0; i<curr_group["fields"]["member_requests"].length;i++) {
// 			console.log(curr_group["fields"]["member_requests"][i][]);
// 		}
// 		$("#name").autocomplete({
// 			source: data
// 		});
// 	});
// }


function addEditMembersPopup(group_name) {
	swal.withForm({   
		title: "Add Members to Your Group!", 
		text: 'Search users:',
		confirmButtonColor: '#FED100',
		showCancelButton: true,   
		closeOnConfirm: false,   
		showLoaderOnConfirm: true, 
		html: true,
		formFields: [
			{ id: 'name', placeholder: "Start typing user's name" },
		]
	}, 
	function(isConfirm) {
		if (isConfirm) {
			user_name = this.swalForm.name;
			if ($.inArray(user_name, user_names_emails) !== -1) {
				user_profile_pk = user_list[$.inArray(user_name, user_names_emails)]["pk"];
				$.ajax({
					url : "/booker/add_user_to_group/",
					type: "POST",
					data : {group_name:group_name,user_profile_pk:user_profile_pk},
				});
				setTimeout(function(){ 
					swal({
						title: user_name + " added to " + group_name + "!",
						type: "success",
						confirmButtonColor: '#FED100',
					},
					function() {
						location.replace("/booker/profile/?tab=group");
					});   
	    		}, 2000);
			} else {
				setTimeout(function(){ 
					swal("Uh oh! There is no user called " + user_name + "!");   
	    		}, 2000);
			}
	    }
	});
	jQuery(function($) {
		var data = user_names_emails;
		console.log(data);
		$("#name").autocomplete({
			source: data
		});
	});
}

function addEditAdminsPopup(group_name) {
	swal.withForm({   
		title: "Add another Admin for Your Group!", 
		text: 'Search users:',
		confirmButtonColor: '#FED100',
		showCancelButton: true,   
		closeOnConfirm: false,   
		showLoaderOnConfirm: true, 
		html: true,
		formFields: [
			{ id: 'name', placeholder: "Start typing user's name" },
		]
	}, 
	function(isConfirm) {
		if (isConfirm) {
			user_name = this.swalForm.name;
			if ($.inArray(user_name, user_names_emails) !== -1) {
				user_profile_pk = user_list[$.inArray(user_name, user_names_emails)]["pk"];
				$.ajax({
					url : "/booker/add_group_admin/",
					type: "POST",
					data : {group_name:group_name,user_profile_pk:user_profile_pk},
				});
				setTimeout(function(){ 
					swal({
						title: user_name + " made admin of " + group_name + "!",
						type: "success",
						confirmButtonColor: '#FED100',
					},
					function() {
						location.replace("/booker/profile/?tab=group");
					});   
	    		}, 2000);
			} else {
				setTimeout(function(){ 
					swal("Uh oh! There is no user called " + user_name + "!");   
	    		}, 2000);
			}
	    }
	});
	jQuery(function($) {
		var data = user_names_emails;
		$("#name").autocomplete({
			source: data
		});
	});
>>>>>>> 975bae2adc79e3932d93eb4bd7855faf106efa95
}



